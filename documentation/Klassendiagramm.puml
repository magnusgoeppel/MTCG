@startuml

class User
{
    - username: String
    - password: String
    - coins: int
    - eloValue: int
    - token: String
    - deck : Deck

    + register(): void
    + login(): void
    + editProfile(): void
    + viewStats(): void
    + updateELO(win: bool): void
    + checkToken(token: string): bool
}

class Card
{
    - name: String
    - damage: int
    - elementType: String

    + getDamage(): int
    + getName(): String
    + getElementType(): String
}

class MonsterCard extends Card
{
    + attack(): void
}

class SpellCard extends Card
{
    + Spell(): void
}

class Deck
{
    - cards: List<Card>

    + addCard(card: Card): void
    + removeCard(card: Card): void
    + getTopCards(): List<Card>
}

class Package
{
    - cards: List<Card>

    + buyPackage(user: User): void
}

class Battle
{
    - user1: User
    - user2: User
    - log: String

    + startBattle(): void
    + getLog(): String
}

class Trade
{
    - offeredCard: Card
    - requiredCard: Card

    + initiateTrade(): void
    + acceptTrade(): void
}

class Scoreboard
{
    - users: List<User>

    + getScoreboard(): List<User>
}

User "1" *-- "1" Deck : hat >
User "1" o-- "n" Package : kauft >
User "1" o-- "n" Battle : spielt >
User "1" o-- "n" Trade :  macht >
Deck "1" *-- "n" Card : enthält >
Package "1" *-- "n" Card : enthält >
Scoreboard "1" o-- "n" User : platziert >


@enduml
